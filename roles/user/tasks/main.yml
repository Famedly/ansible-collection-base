---
- name: "Ensure sudo is installed"
  ansible.builtin.package:
    name: "sudo"
    state: "present"
  when: "ansible_os_family in ['Debian', 'RedHat']"
  become: true
  register: "task_result"
  until: "task_result is success"
  retries: 3
  delay: 2
  tags: ['prepare', 'prepare-users']

- name: "Ensure doas is installed"
  community.general.apk:
    name: "opendoas"
    state: "present"
  when: "ansible_os_family in ['Chimera']"
  become: true
  register: "task_result"
  until: "task_result is success"
  retries: 3
  delay: 2
  tags: ['prepare', 'prepare-users']

- name: "Query groups available on server"
  ansible.builtin.getent:
    database: "group"
  tags: ['deploy', 'deploy-users']

- name: "Loop over users and include per-user tasks"
  ansible.builtin.include_tasks: "user.yml"
  loop: "{{ users | dict2items(key_name='name', value_name='attrs') }}"
  loop_control:
    loop_var: "user"
    label: "{{ user.name }}"
  tags: ['deploy', 'deploy-users']

- name: "Template sudoers.d managed file"
  ansible.builtin.copy:
    content: |
      {% for name, attrs in users.items() %}
      {% if attrs.root | default(false) and attrs.active | default(false) %}
      {{ name }} ALL=(ALL) NOPASSWD:ALL
      {% endif %}
      {% endfor %}
    dest: "/etc/sudoers.d/{{ users_sudo_namespace }}"
    owner: "root"
    mode: "0440"
    validate: "/usr/sbin/visudo -cf %s"
  when: "ansible_os_family in ['Debian', 'RedHat']"
  become: true
  tags: ['deploy', 'deploy-users']

- name: "Template opendoas permissions"
  ansible.builtin.blockinfile:
    block: |
      {% for name, attrs in users.items() %}
      {% if attrs.root | default(false) and attrs.active | default(false) %}
      permit nopass {{ name }}
      {% endif %}
      {% endfor %}
    path: "/etc/doas.conf"
    owner: "root"
    mode: "0644"
    validate: "doas -C %s"
  when: "ansible_os_family in ['Chimera']"
  become: true
  tags: ['deploy', 'deploy-users']
