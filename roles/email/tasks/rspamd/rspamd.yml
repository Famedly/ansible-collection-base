---
  - name: Add rspamd group
    ansible.builtin.group:
      name: "{{ rspamd_group_name }}"
      state: present
 
  - name: Add rspamd user
    ansible.builtin.user:
      name: "{{ rspamd_user_name }}"
      group: "{{ rspamd_group_name }}"
    register: rspamd_user

  - name: create directory for rspamd config and dkim-certs
    file:
      path: '{{ rspamd_host_base_path }}/{{ item }}'
      state: directory
      #owner: root
      owner: "{{ rspamd_user.name }}"
      group: "{{ rspamd_user.group }}"
      mode: '0700'
    with_items:
      - 
        #- certs
        #- general_config
        #- module_config
        #- score_config
      - config
      - static_runtime_data
      - control_socket
      - dkim

#  - name: create merge config for rspamd
#    template:
#      src: "rspamd/{{ item }}"
#      dest: "{{ rspamd_host_base_path }}/merge_config/{{ item }}"
#      #owner: root
#      owner: "{{ rspamd_user.name }}"
#      group: "{{ rspamd_user.group }}"
#      mode: '0700'
#    with_items:
#      - logging.inc

  - name: Ensure directory structure for config exists
    file:
      path: '{{ rspamd_host_base_path }}/config/{{ item.path }}'
      state: directory
      owner: "{{ rspamd_user.name }}"
      group: "{{ rspamd_user.group }}"
      mode: '0700'
    with_filetree: '../templates/rspamd/configdir'
    when: item.state == 'directory'

  - name: Ensure config files are populated from templates
    template:
      src: 'rspamd/configdir/{{ item.path }}'
      dest: '{{ rspamd_host_base_path }}/config/{{ item.path }}'
      owner: "{{ rspamd_user.name }}"
      group: "{{ rspamd_user.group }}"
      mode: '0700'
    with_filetree: '../templates/rspamd/configdir'
    when: item.state == 'file'

      #- name: rspamd cert-gen
      #import_tasks: rspamd_cert_gen.yml #TODO
      #  - name: redis-rspamd
      #import_tasks: rspamd/redis.yml

  - name: prepare docker mount volume list
    set_fact:
      rspamd_docker_volumes: "{{ rspamd_docker_volumes + [ rspamd_host_base_path + '/config/' + item.path + ':' + rspamd_docker_conf_path + '/' + item.path + ':ro' ] }}"
    with_filetree: '../templates/rspamd/configdir'
    when: item.state == 'file'
    no_log: True

#  - debug: msg={{ rspamd_docker_volumes }}

    #  - name: wait for redis to be available
    #ansible.builtin.wait_for:
    #  timeout: 30 #TODO solve differently

  - name: install rspamd container
    docker_container:
      name: "{{ rspamd_docker_name }}"
      hostname: "{{ rspamd_docker_name }}"
      image: "{{ rspamd_docker_image }}"
      ports: "{{ rspamd_docker_ports }}"
      labels: "{{ rspamd_docker_labels }}"
      restart_policy: unless-stopped
      recreate: true
      hostname: "{{ rspamd_docker_name }}"
      user: "{{ rspamd_user.uid }}:{{ rspamd_user.group }}" #not needed because rspamd forks processes into users
      pull: true
      #command: "-u {{ rspamd_user.name }} -g {{rspamd_group_name }}"
      volumes: "{{ rspamd_docker_volumes }}"
